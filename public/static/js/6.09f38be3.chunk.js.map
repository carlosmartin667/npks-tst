{"version":3,"sources":["@core/components/avatar/index.js","router/Router.js","@core/layouts/BlankLayout.js","utility/Utils.js","@core/components/customizer/index.js","@core/components/scrolltop/index.js","@core/layouts/components/footer/index.js","assets/images/portrait/small/avatar-s-11.jpg","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","utility/context/Can.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useLayout.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","utility/hooks/useRouterTransition.js","@core/layouts/VerticalLayout.js","navigation/vertical/index.js","layouts/VerticalLayout.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","navigation/horizontal/index.js","layouts/HorizontalLayout.js","@core/layouts/components/layout-wrapper/index.js","@core/components/routes/PublicRoute.js","router/routes/index.js","App.js","utility/hooks/useSkin.js"],"names":["Avatar","forwardRef","props","ref","img","size","icon","color","status","badgeUp","content","Tag","tag","initials","imgWidth","className","badgeText","imgHeight","badgeColor","imgClassName","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","Router","allRoutes","useRoutes","BlankLayout","useState","isMounted","setIsMounted","skin","useSkin","useEffect","isObjEmpty","obj","Object","keys","length","getUserData","JSON","parse","localStorage","getItem","getHomeRouteForLoggedInUser","userRole","DefaultRoute","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Customizer","isRtl","layout","setSkin","setIsRtl","isHidden","setLayout","navbarType","footerType","transition","navbarColor","setIsHidden","contentWidth","menuCollapsed","setLastLayout","setTransition","setNavbarType","setFooterType","setNavbarColor","setContentWidth","setMenuCollapsed","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","value","label","transitionValue","find","i","open","href","onClick","options","wheelPropagation","skinsArr","name","checked","map","radio","index","marginCondition","type","id","onChange","for","renderSkinsRadio","classNamePrefix","defaultValue","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","ScrollTop","showOffset","scrollBehaviour","children","visible","setVisible","window","addEventListener","pageYOffset","scroll","top","behavior","Footer","Date","getFullYear","UserDropdown","defaultAvatar","end","Link","to","divider","NavbarUser","ThemeNavbar","setMenuVisibility","ThemeToggler","VerticalMenuHeader","setGroupOpen","menuHover","user","Toggler","role","themeConfig","app","appLogoImage","appName","VerticalNavMenuLink","item","activeItem","LinkTag","externalLink","NavLink","t","useTranslation","disabled","active","navLink","target","newTab","isActive","title","badge","AbilityContext","createContext","hasActiveChild","createContextualCan","Consumer","currentUrl","child","includes","removeChildren","openGroup","currentActiveGroup","indexOf","splice","VerticalNavMenuGroup","groupOpen","parentItem","groupActive","setGroupActive","setCurrentActiveGroup","location","useLocation","currentURL","pathname","onCollapseClick","parent","activeGroup","toggleOpenGroup","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","canViewMenuGroup","Sidebar","menu","menuData","setActiveItem","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","onScrollY","container","scrollTop","current","classList","contains","add","remove","scrollMenu","useRTL","dispatch","useDispatch","useSelector","state","isRTL","element","document","getElementsByTagName","setAttribute","handleRTL","useLayout","store","handleLayout","breakpoint","innerWidth","lastLayout","handleLastLayout","useNavbarType","handleNavbarType","useFooterType","handleFooterType","useNavbarColor","handleNavbarColor","useRouterTransition","routerTransition","handleRouterTransition","VerticalLayout","navbar","footer","menuVisibility","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","menuHidden","val","handleMenuCollapsed","footerClasses","static","sticky","hidden","navbarClasses","floating","bgColorCondition","expand","light","dark","show","customizer","handleMenuHidden","handleContentWidth","navigation","HorizontalNavMenuLink","isChild","setMenuOpen","commonClass","applyHeight","enabled","phase","fn","data","stylesObj","pageHeight","innerHeight","popperEl","elements","popper","ddTop","getBoundingClientRect","clientHeight","maxHeight","overflowY","ddRef","left","closest","styles","HorizontalNavMenuGroup","submenu","menuOpen","popperElement","setPopperElement","referenceElement","setReferenceElement","popperOffsetHorizontal","popperPlacement","popperPlacementSubMenu","usePopper","placement","modifiers","offset","update","attributes","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","routerProps","currentActiveItem","LayoutWrapper","routeMeta","navbarStore","layoutStored","appLayoutCondition","appLayout","Fragment","query","memo","PublicRoute","route","restrictedRoute","meta","restricted","fallback","getLayout","blank","vertical","horizontal","Home","lazy","Login","Register","ForgotPassword","Error","Alta","Arrancador","BalanceCero","BalanceN","Fertilizantes","FormulaAbono","Rendimiento","Routes","path","replace","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","Wrapper","getRouteMeta","App","setAllRoutes","AllRoutes","layoutItem","getRoutes","body","bordered","handleSkin"],"mappings":"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","file":"static/js/6.09f38be3.chunk.js","sourcesContent":["// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    img,\n    size,\n    icon,\n    color,\n    status,\n    badgeUp,\n    content,\n    tag: Tag,\n    initials,\n    imgWidth,\n    className,\n    badgeText,\n    imgHeight,\n    badgeColor,\n    imgClassName,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  icon: Proptypes.node,\n  src: Proptypes.string,\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  badgeText: Proptypes.string,\n  className: Proptypes.string,\n  imgClassName: Proptypes.string,\n  contentStyles: Proptypes.object,\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","// ** Router imports\nimport { useRoutes } from 'react-router-dom'\n\nconst Router = ({ allRoutes }) => {\n  const routes = useRoutes([...allRoutes])\n\n  return routes\n}\n\nexport default Router\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\nconst BlankLayout = () => {\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  // ** Hooks\n  const { skin } = useSkin()\n\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames('blank-page', {\n        'dark-layout': skin === 'dark'\n      })}\n    >\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","import { DefaultRoute } from '../router/routes'\n\n// ** Checks if an object is empty (returns boolean)\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\n\n// ** Returns K format from a number\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\n\n// ** Converts HTML to string\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\n\n// ** Checks if the passed date is today\nconst isToday = date => {\n  const today = new Date()\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() &&\n    date.getMonth() === today.getMonth() &&\n    date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n  )\n}\n\n/**\n ** Format and return date in Humanize format\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\n  if (!value) return value\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n// ** Returns short month of passed date\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value)\n  let formatting = { month: 'short', day: 'numeric' }\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = { hour: 'numeric', minute: 'numeric' }\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\n}\n\n/**\n ** Return if user is logged in\n ** This is completely up to you and how you want to store the token in your frontend application\n *  ? e.g. If you are using cookies to store the application please update this function\n */\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\n\n/**\n ** This function is used for demo purpose route navigation\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\n ** Please note role field is just for showing purpose it's not used by anything in frontend\n ** We are checking role just for ease\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\n * @param {String} userRole Role of user\n */\nexport const getHomeRouteForLoggedInUser = userRole => {\n  if (userRole === 'admin') return DefaultRoute\n  if (userRole === 'client') return '/access-control'\n  return '/login'\n}\n\n// ** React Select Theme Colors\nexport const selectThemeColors = theme => ({\n  ...theme,\n  colors: {\n    ...theme.colors,\n    primary25: '#7367f01a', // for option hover bg-color\n    primary: '#7367f0', // for selected option bg-color\n    neutral10: '#7367f0', // for tags bg-color\n    neutral20: '#ededed', // for input border-color\n    neutral30: '#ededed' // for input hover border-color\n  }\n})\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { selectThemeColors } from '@utils'\nimport { Settings, X } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Reactstrap Imports\nimport { Input, Label } from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    isRtl,\n    layout,\n    setSkin,\n    setIsRtl,\n    isHidden,\n    setLayout,\n    navbarType,\n    footerType,\n    transition,\n    navbarColor,\n    setIsHidden,\n    contentWidth,\n    menuCollapsed,\n    setLastLayout,\n    setTransition,\n    setNavbarType,\n    setFooterType,\n    setNavbarColor,\n    setContentWidth,\n    setMenuCollapsed\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setSkin(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'horizontal' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input type='radio' id={radio.name} checked={radio.checked} onChange={() => setNavbarType(radio.name)} />\n          <Label className='form-check-label' for={radio.name}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <div key={index} className={classnames('form-check', { 'mb-2 me-1': marginCondition })}>\n          <Input\n            type='radio'\n            checked={radio.checked}\n            id={`footer-${radio.name}`}\n            onChange={() => setFooterType(radio.name)}\n          />\n          <Label className='form-check-label' for={`footer-${radio.name}`}>\n            {radio.label}\n          </Label>\n        </div>\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content' options={{ wheelPropagation: false }}>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </div>\n\n          <div className='mb-2'>\n            <p className='fw-bold'>Content Width</p>\n            <div className='d-flex'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='full-width'\n                  checked={contentWidth === 'full'}\n                  onChange={() => setContentWidth('full')}\n                />\n                <Label className='form-check-label' for='full-width'>\n                  Full Width\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  id='boxed'\n                  type='radio'\n                  checked={contentWidth === 'boxed'}\n                  onChange={() => setContentWidth('boxed')}\n                />\n                <Label className='form-check-label' for='boxed'>\n                  Boxed\n                </Label>\n              </div>\n            </div>\n          </div>\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex'>\n              <p className='fw-bold me-auto mb-0'>RTL</p>\n              <Input type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </div>\n\n          <div className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='fw-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='fw-bold'>Menu Layout</p>\n          <div className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <div className='form-check me-1'>\n                <Input\n                  type='radio'\n                  id='vertical-layout'\n                  checked={layout === 'vertical'}\n                  onChange={() => {\n                    setLayout('vertical')\n                    setLastLayout('vertical')\n                  }}\n                />\n                <Label className='form-check-label' for='vertical-layout'>\n                  Vertical\n                </Label>\n              </div>\n              <div className='form-check'>\n                <Input\n                  type='radio'\n                  id='horizontal-layout'\n                  checked={layout === 'horizontal'}\n                  onChange={() => {\n                    setLayout('horizontal')\n                    setLastLayout('horizontal')\n                  }}\n                />\n                <Label className='form-check-label' for='horizontal-layout'>\n                  Horizontal\n                </Label>\n              </div>\n            </div>\n          </div>\n          {layout !== 'horizontal' ? (\n            <div className='form-switch mb-2 ps-0'>\n              <div className='d-flex align-items-center'>\n                <p className='fw-bold me-auto mb-0'>Menu Collapsed</p>\n                <Input\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </div>\n          ) : null}\n\n          <div className='form-switch mb-2 ps-0'>\n            <div className='d-flex align-items-center'>\n              <p className='fw-bold me-auto mb-0'>Menu Hidden</p>\n              <Input\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'horizontal' ? (\n            <div className='mb-2'>\n              <p className='fw-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </div>\n          ) : null}\n\n          <div className='mb-2'>\n            <p className='fw-bold'>{layout === 'horizontal' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </div>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <div className='mb-2'>\n            <p className='fw-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </div>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\n\nconst ScrollTop = props => {\n  // ** Props\n  const { showOffset, scrollBehaviour, children, ...rest } = props\n\n  // ** State\n  const [visible, setVisible] = useState(false)\n\n  useEffect(() => {\n    if (window) {\n      window.addEventListener('scroll', () => {\n        if (window.pageYOffset >= showOffset) {\n          setVisible(true)\n        } else {\n          setVisible(false)\n        }\n      })\n    }\n  }, [])\n\n  const handleScrollToTop = () => {\n    window.scroll({ top: 0, behavior: scrollBehaviour })\n  }\n\n  return (\n    visible && (\n      <div className='scroll-to-top' onClick={handleScrollToTop} {...rest}>\n        {children}\n      </div>\n    )\n  )\n}\n\nexport default ScrollTop\n\n// ** PropTypes\nScrollTop.propTypes = {\n  showOffset: Proptypes.number,\n  children: Proptypes.any.isRequired,\n  scrollBehaviour: Proptypes.oneOf(['smooth', 'instant', 'auto'])\n}\n\nScrollTop.defaultProps = {\n  scrollBehaviour: 'smooth'\n}\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-start d-block d-md-inline-block mt-25'>\n        Npks © {new Date().getFullYear()}{' '}    \n      </span>\n\n    </p>\n  )\n}\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/media/avatar-s-11.1d46cc62.jpg\";","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\n\nconst UserDropdown = () => {\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name fw-bold'>John Doe</span>\n          <span className='user-status'>Admin</span>\n        </div>\n        <Avatar img={defaultAvatar} imgHeight='40' imgWidth='40' status='online' />\n      </DropdownToggle>\n      <DropdownMenu end>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <User size={14} className='me-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='me-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem divider />  \n        <DropdownItem tag={Link} to='/' onClick={e => e.preventDefault()}>\n          <HelpCircle size={14} className='me-75' />\n          <span className='align-middle'>FAQ</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='/login'>\n          <Power size={14} className='me-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport UserDropdown from './UserDropdown'\n\nconst NavbarUser = () => {\n  return (\n    <ul className='nav navbar-nav align-items-center ms-auto'>\n      <UserDropdown />\n    </ul>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <ul className='navbar-nav d-xl-none'>\n          <NavItem className='mobile-menu me-auto'>\n            <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n              <Menu className='ficon' />\n            </NavLink>\n          </NavItem>\n        </ul>\n        <NavItem className='d-none d-lg-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n      <NavbarUser skin={skin} setSkin={setSkin} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Icons Imports\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Vars\n  const user = getUserData()\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item me-auto'>\n          <NavLink to={user ? getHomeRouteForLoggedInUser(user.role) : '/'} className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Badge } from 'reactstrap'\n\nconst VerticalNavMenuLink = ({ item, activeItem }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                if (isActive && !item.disabled) {\n                  return 'd-flex align-items-center active'\n                }\n              }\n            })}\n        onClick={e => {\n          if (item.navLink.length === 0 || item.navLink === '#' || item.disabled === true) {\n            e.preventDefault()\n          }\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** Imports createContext function\nimport { createContext } from 'react'\n\n// ** Imports createContextualCan function\nimport { createContextualCan } from '@casl/react'\n\n// ** Create Context\nexport const AbilityContext = createContext()\n\n// ** Init Can Context\nexport const Can = createContextualCan(AbilityContext.Consumer)\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if the given item has the given url\n * in one of its children\n *\n * @param item\n * @param activeItem\n */\nexport const hasActiveChild = (item, currentUrl) => {\n  const { children } = item\n\n  if (!children) {\n    return false\n  }\n\n  for (const child of children) {\n    if (child.children) {\n      if (hasActiveChild(child, currentUrl)) {\n        return true\n      }\n    }\n\n    // Check if the child has a link and is active\n    if (child && child.navLink && currentUrl && (child.navLink === currentUrl || currentUrl.includes(child.navLink))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if this is a children\n * of the given item\n *\n * @param children\n * @param openGroup\n * @param currentActiveGroup\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n  children.forEach(child => {\n    if (!currentActiveGroup.includes(child.id)) {\n      const index = openGroup.indexOf(child.id)\n      if (index > -1) openGroup.splice(index, 1)\n      if (child.children) removeChildren(child.children, openGroup, currentActiveGroup)\n    }\n  })\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\n// ** Reactstrap Imports\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { hasActiveChild, removeChildren } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupOpen,\n  menuHover,\n  activeItem,\n  parentItem,\n  groupActive,\n  setGroupOpen,\n  menuCollapsed,\n  setGroupActive,\n  currentActiveGroup,\n  setCurrentActiveGroup,\n  ...rest\n}) => {\n  // ** Hooks\n  const { t } = useTranslation()\n  const location = useLocation()\n\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggle Open Group\n  const toggleOpenGroup = (item, parent) => {\n    let openGroup = groupOpen\n    const activeGroup = groupActive\n\n    // ** If Group is already open and clicked, close the group\n    if (openGroup.includes(item.id)) {\n      openGroup.splice(openGroup.indexOf(item.id), 1)\n\n      // ** If clicked Group has open group children, Also remove those children to close those groups\n      if (item.children) {\n        removeChildren(item.children, openGroup, groupActive)\n      }\n    } else if (activeGroup.includes(item.id) || currentActiveGroup.includes(item.id)) {\n      // ** If Group clicked is Active Group\n\n      // ** If Active group is closed and clicked again, we should open active group else close active group\n      if (!activeGroup.includes(item.id) && currentActiveGroup.includes(item.id)) {\n        activeGroup.push(item.id)\n      } else {\n        activeGroup.splice(activeGroup.indexOf(item.id), 1)\n      }\n\n      // ** Update Active Group\n      setGroupActive([...activeGroup])\n    } else if (parent) {\n      // ** If Group clicked is the child of a open group, first remove all the open groups under that parent\n      if (parent.children) {\n        removeChildren(parent.children, openGroup, groupActive)\n      }\n\n      // ** After removing all the open groups under that parent, add the clicked group to open group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    } else {\n      // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n      // ** Empty Open Group array\n      openGroup = []\n\n      // ** Push current clicked group item to Open Group array\n      if (!openGroup.includes(item.id)) {\n        openGroup.push(item.id)\n      }\n    }\n    setGroupOpen([...openGroup])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    toggleOpenGroup(item, parentItem)\n\n    e.preventDefault()\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (hasActiveChild(item, currentURL)) {\n      if (!groupActive.includes(item.id)) groupActive.push(item.id)\n    } else {\n      const index = groupActive.indexOf(item.id)\n      if (index > -1) groupActive.splice(index, 1)\n    }\n    setGroupActive([...groupActive])\n    setCurrentActiveGroup([...groupActive])\n    setGroupOpen([])\n  }, [location])\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active':\n          groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{t(item.title)}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ms-auto me-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            {...rest}\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            currentActiveGroup={currentActiveGroup}\n            setCurrentActiveGroup={setCurrentActiveGroup}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            activeItem={activeItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup,\n    VerticalNavMenuSectionHeader\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\r\nimport { Fragment, useState, useRef } from 'react'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\n\r\n// ** Vertical Menu Components\r\nimport VerticalMenuHeader from './VerticalMenuHeader'\r\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\r\n\r\nconst Sidebar = props => {\r\n  // ** Props\r\n  const { menuCollapsed, menu, skin, menuData } = props\r\n\r\n  // ** States\r\n  const [groupOpen, setGroupOpen] = useState([])\r\n  const [groupActive, setGroupActive] = useState([])\r\n  const [currentActiveGroup, setCurrentActiveGroup] = useState([])\r\n  const [activeItem, setActiveItem] = useState(null)\r\n\r\n  // ** Menu Hover State\r\n  const [menuHover, setMenuHover] = useState(false)\r\n\r\n  // ** Ref\r\n  const shadowRef = useRef(null)\r\n\r\n  // ** Function to handle Mouse Enter\r\n  const onMouseEnter = () => {\r\n    setMenuHover(true)\r\n  }\r\n\r\n  // ** Scroll Menu\r\n  const scrollMenu = container => {\r\n    if (shadowRef && container.scrollTop > 0) {\r\n      if (!shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.add('d-block')\r\n      }\r\n    } else {\r\n      if (shadowRef.current.classList.contains('d-block')) {\r\n        shadowRef.current.classList.remove('d-block')\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\r\n          expanded: menuHover || menuCollapsed === false,\r\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\r\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\r\n        })}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={() => setMenuHover(false)}\r\n      >\r\n        {menu ? (\r\n          menu({ ...props })\r\n        ) : (\r\n          <Fragment>\r\n            {/* Vertical Menu Header */}\r\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\r\n            {/* Vertical Menu Header Shadow */}\r\n            <div className='shadow-bottom' ref={shadowRef}></div>\r\n            {/* Perfect Scrollbar */}\r\n            <PerfectScrollbar\r\n              className='main-menu-content'\r\n              options={{ wheelPropagation: false }}\r\n              onScrollY={container => scrollMenu(container)}\r\n            >\r\n              <ul className='navigation navigation-main'>\r\n                <VerticalNavMenuItems\r\n                  items={menuData}\r\n                  menuData={menuData}\r\n                  menuHover={menuHover}\r\n                  groupOpen={groupOpen}\r\n                  activeItem={activeItem}\r\n                  groupActive={groupActive}\r\n                  setGroupOpen={setGroupOpen}\r\n                  menuCollapsed={menuCollapsed}\r\n                  setActiveItem={setActiveItem}\r\n                  setGroupActive={setGroupActive}\r\n                  currentActiveGroup={currentActiveGroup}\r\n                  setCurrentActiveGroup={setCurrentActiveGroup}\r\n                />\r\n              </ul>\r\n            </PerfectScrollbar>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","//** React Imports\nimport { useEffect } from 'react'\n\n// ** Store & Actions\nimport { handleRTL } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRTL = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const isRtl = useSelector(state => state.layout.isRTL)\n\n  // ** Return a wrapped version of useState's setter function\n  const setValue = value => {\n    dispatch(handleRTL(value))\n  }\n\n  useEffect(() => {\n    // ** Get HTML Tag\n    const element = document.getElementsByTagName('html')[0]\n\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\n    if (isRtl) {\n      element.setAttribute('dir', 'rtl')\n    } else {\n      element.setAttribute('dir', 'ltr')\n    }\n  }, [isRtl])\n\n  return [isRtl, setValue]\n}\n","//** React Imports\n// import { useEffect, useCallback } from 'react'\n\n// ** Store Imports\nimport { useDispatch, useSelector } from 'react-redux'\nimport { handleLayout, handleLastLayout } from '@store/layout'\n\nexport const useLayout = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setLayout = value => {\n    dispatch(handleLayout(value))\n  }\n\n  const setLastLayout = value => {\n    dispatch(handleLastLayout(value))\n  }\n\n  // const handleLayoutUpdate = useCallback(() => {\n  //   // ** If layout is horizontal & screen size is equals to or below 1200\n  //   if (store.layout === 'horizontal' && window.innerWidth <= 1200) {\n  //     setLayout('vertical')\n  //     setLastLayout('horizontal')\n  //   }\n  //   // ** If lastLayout is horizontal & screen size is equals to or above 1200\n  //   if (store.lastLayout === 'horizontal' && window.innerWidth >= 1200) {\n  //     setLayout('horizontal')\n  //   }\n  // }, [])\n\n  // // ** ComponentDidMount\n  // useEffect(() => {\n  //   handleLayoutUpdate()\n  // }, [])\n\n  // useEffect(() => {\n  //   // ** Window Resize Event\n  //   window.addEventListener('resize', handleLayoutUpdate)\n  // }, [store.layout, store.lastLayout])\n\n  if (window) {\n    const breakpoint = 1200\n\n    if (window.innerWidth < breakpoint) {\n      setLayout('vertical')\n    }\n\n    window.addEventListener('resize', () => {\n      if (window.innerWidth <= breakpoint && store.lastLayout !== 'vertical' && store.layout !== 'vertical') {\n        setLayout('vertical')\n      }\n      if (window.innerWidth >= breakpoint && store.lastLayout !== store.layout) {\n        setLayout(store.lastLayout)\n      }\n    })\n  }\n\n  return { layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout }\n}\n","// ** Store Imports\nimport { handleNavbarType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setNavbarType = type => {\n    dispatch(handleNavbarType(type))\n  }\n\n  return { navbarType: store.navbarType, setNavbarType }\n}\n","// ** Store Imports\nimport { handleFooterType } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useFooterType = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setFooterType = type => {\n    dispatch(handleFooterType(type))\n  }\n\n  return { setFooterType, footerType: store.footerType }\n}\n","// ** Store Imports\nimport { handleNavbarColor } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useNavbarColor = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  // ** Return a wrapped version of useState's setter function\n  const setNavbarColor = value => {\n    dispatch(handleNavbarColor(value))\n  }\n\n  return { navbarColor: store.navbarColor, setNavbarColor }\n}\n","// ** Store Imports\nimport { handleRouterTransition } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useRouterTransition = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setTransition = type => {\n    dispatch(handleRouterTransition(type))\n  }\n\n  return { transition: store.routerTransition, setTransition }\n}\n","// ** React Imports\r\nimport { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n// ** Store & Actions\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/layout'\r\n\r\n// ** Third Party Components\r\nimport classnames from 'classnames'\r\nimport { ArrowUp } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport { Navbar, Button } from 'reactstrap'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\n// ** Custom Components\r\n\r\nimport Customizer from '@components/customizer'\r\nimport ScrollToTop from '@components/scrolltop'\r\nimport FooterComponent from './components/footer'\r\nimport NavbarComponent from './components/navbar'\r\nimport SidebarComponent from './components/menu/vertical-menu'\r\n\r\n// ** Custom Hooks\r\nimport { useRTL } from '@hooks/useRTL'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { useNavbarType } from '@hooks/useNavbarType'\r\nimport { useFooterType } from '@hooks/useFooterType'\r\nimport { useNavbarColor } from '@hooks/useNavbarColor'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Styles\r\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\r\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\r\n\r\nconst VerticalLayout = props => {\r\n  // ** Props\r\n  const { menu, navbar, footer, children, menuData } = props\r\n\r\n  // ** Hooks\r\n  const [isRtl, setIsRtl] = useRTL()\r\n  const { skin, setSkin } = useSkin()\r\n  const { navbarType, setNavbarType } = useNavbarType()\r\n  const { footerType, setFooterType } = useFooterType()\r\n  const { navbarColor, setNavbarColor } = useNavbarColor()\r\n  const { layout, setLayout, setLastLayout } = useLayout()\r\n  const { transition, setTransition } = useRouterTransition()\r\n\r\n  // ** States\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const [menuVisibility, setMenuVisibility] = useState(false)\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\r\n\r\n  // ** Vars\r\n  const dispatch = useDispatch()\r\n  const layoutStore = useSelector(state => state.layout)\r\n\r\n  // ** Update Window Width\r\n  const handleWindowWidth = () => {\r\n    setWindowWidth(window.innerWidth)\r\n  }\r\n\r\n  // ** Vars\r\n  const location = useLocation()\r\n  const isHidden = layoutStore.menuHidden\r\n  const contentWidth = layoutStore.contentWidth\r\n  const menuCollapsed = layoutStore.menuCollapsed\r\n\r\n  // ** Toggles Menu Collapsed\r\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\r\n\r\n  // ** Handles Content Width\r\n  const setContentWidth = val => dispatch(handleContentWidth(val))\r\n\r\n  // ** Handles Content Width\r\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\r\n\r\n  //** This function will detect the Route Change and will hide the menu on menu item click\r\n  useEffect(() => {\r\n    if (menuVisibility && windowWidth < 1200) {\r\n      setMenuVisibility(false)\r\n    }\r\n  }, [location])\r\n\r\n  //** Sets Window Size & Layout Props\r\n  useEffect(() => {\r\n    if (window !== undefined) {\r\n      window.addEventListener('resize', handleWindowWidth)\r\n    }\r\n  }, [windowWidth])\r\n\r\n  //** ComponentDidMount\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n    return () => setIsMounted(false)\r\n  }, [])\r\n\r\n  // ** Vars\r\n  const footerClasses = {\r\n    static: 'footer-static',\r\n    sticky: 'footer-fixed',\r\n    hidden: 'footer-hidden'\r\n  }\r\n\r\n  const navbarWrapperClasses = {\r\n    floating: 'navbar-floating',\r\n    sticky: 'navbar-sticky',\r\n    static: 'navbar-static',\r\n    hidden: 'navbar-hidden'\r\n  }\r\n\r\n  const navbarClasses = {\r\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\r\n    sticky: 'fixed-top',\r\n    static: 'navbar-static-top',\r\n    hidden: 'd-none'\r\n  }\r\n\r\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\r\n\r\n  if (!isMounted) {\r\n    return null\r\n  }\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\r\n          footerClasses[footerType] || 'footer-static'\r\n        }`,\r\n        {\r\n          // Modern Menu\r\n          'vertical-menu-modern': windowWidth >= 1200,\r\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\r\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\r\n\r\n          // Overlay Menu\r\n          'vertical-overlay-menu': windowWidth < 1200,\r\n          'menu-hide': !menuVisibility && windowWidth < 1200,\r\n          'menu-open': menuVisibility && windowWidth < 1200\r\n        }\r\n      )}\r\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\r\n    >\r\n      {!isHidden ? (\r\n        <SidebarComponent\r\n          skin={skin}\r\n          menu={menu}\r\n          menuData={menuData}\r\n          menuCollapsed={menuCollapsed}\r\n          menuVisibility={menuVisibility}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n          setMenuVisibility={setMenuVisibility}\r\n        />\r\n      ) : null}\r\n\r\n      <Navbar\r\n        expand='lg'\r\n        container={false}\r\n        light={skin !== 'dark'}\r\n        dark={skin === 'dark' || bgColorCondition}\r\n        color={bgColorCondition ? navbarColor : undefined}\r\n        className={classnames(\r\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\r\n        )}\r\n      >\r\n        <div className='navbar-container d-flex content'>\r\n          {navbar ? (\r\n            navbar({ skin, setSkin, setMenuVisibility })\r\n          ) : (\r\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\r\n          )}\r\n        </div>\r\n      </Navbar>\r\n      {children}\r\n\r\n      {/* Vertical Nav Menu Overlay */}\r\n      <div\r\n        className={classnames('sidenav-overlay', {\r\n          show: menuVisibility\r\n        })}\r\n        onClick={() => setMenuVisibility(false)}\r\n      ></div>\r\n      {/* Vertical Nav Menu Overlay */}\r\n\r\n      {themeConfig.layout.customizer === true ? (\r\n        <Customizer\r\n          skin={skin}\r\n          isRtl={isRtl}\r\n          layout={layout}\r\n          setSkin={setSkin}\r\n          setIsRtl={setIsRtl}\r\n          isHidden={isHidden}\r\n          setLayout={setLayout}\r\n          footerType={footerType}\r\n          navbarType={navbarType}\r\n          transition={transition}\r\n          setIsHidden={setIsHidden}\r\n          themeConfig={themeConfig}\r\n          navbarColor={navbarColor}\r\n          contentWidth={contentWidth}\r\n          setTransition={setTransition}\r\n          setFooterType={setFooterType}\r\n          setNavbarType={setNavbarType}\r\n          setLastLayout={setLastLayout}\r\n          menuCollapsed={menuCollapsed}\r\n          setNavbarColor={setNavbarColor}\r\n          setContentWidth={setContentWidth}\r\n          setMenuCollapsed={setMenuCollapsed}\r\n        />\r\n      ) : null}\r\n      <footer\r\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\r\n          'd-none': footerType === 'hidden'\r\n        })}\r\n      >\r\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\r\n      </footer>\r\n\r\n      {themeConfig.layout.scrollTop === true ? (\r\n        <div className='scroll-to-top'>\r\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\r\n            <Button className='btn-icon' color='primary'>\r\n              <ArrowUp size={14} />\r\n            </Button>\r\n          </ScrollToTop>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerticalLayout\r\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'alta',\n    title: 'Alta',\n    icon: <Mail size={20} />,\n    navLink: '/alta'\n  },\n  {\n    id: 'Arrancador',\n    title: 'Arrancador',\n    icon: <Mail size={20} />,\n    navLink: '/arrancador'\n  },\n  {\n    id: 'BalanceCero',\n    title: 'BalanceCero',\n    icon: <Mail size={20} />,\n    navLink: '/balanceCero'\n  },\n  {\n    id: 'BalanceN',\n    title: 'BalanceN',\n    icon: <Mail size={20} />,\n    navLink: '/balanceN'\n  },\n  {\n    id: 'Fertilizantes',\n    title: 'Fertilizantes',\n    icon: <Mail size={20} />,\n    navLink: '/fertilizantes'\n  },\n  {\n    id: 'FormulaAbono',\n    title: 'FormulaAbono',\n    icon: <Mail size={20} />,\n    navLink: '/formulaAbono'\n  },\n  {\n    id: 'Rendimiento',\n    title: 'Rendimiento',\n    icon: <Mail size={20} />,\n    navLink: '/rendimiento'\n  }\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\nconst VerticalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default VerticalLayout\n","// ** React Imports\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\nconst HorizontalNavMenuLink = ({ item, isChild, setMenuOpen }) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** Hooks\n  const { t } = useTranslation()\n\n  const handleClick = () => {\n    if (setMenuOpen) {\n      setMenuOpen(false)\n    }\n  }\n\n  return (\n    <li\n      onClick={handleClick}\n      className={classnames('nav-item', {\n        disabled: item.disabled\n      })}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              className: ({ isActive }) => {\n                const commonClass = 'd-flex align-items-center'\n                if (isActive && !item.disabled && item.navLink !== '#') {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item active`\n                  } else {\n                    return `${commonClass} nav-link active`\n                  }\n                } else {\n                  if (isChild) {\n                    return `${commonClass} dropdown-item`\n                  } else {\n                    return `${commonClass} nav-link`\n                  }\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { usePopper } from 'react-popper'\nimport { useTranslation } from 'react-i18next'\n\n// ** Utils\nimport { hasActiveChild } from '@layouts/utils'\n\n// ** Hooks\nimport { useRTL } from '@hooks/useRTL'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst applyHeight = {\n  enabled: true,\n  name: 'applyHeight',\n  phase: 'beforeWrite',\n  fn: data => {\n    const pageHeight = window.innerHeight,\n      popperEl = data.state.elements.popper,\n      ddTop = popperEl.getBoundingClientRect().top,\n      ddHeight = popperEl.clientHeight\n    let maxHeight, stylesObj\n    // ** Calculate and set height\n    if (pageHeight - ddTop - ddHeight - 28 < 1) {\n      maxHeight = pageHeight - ddTop - 25\n      stylesObj = {\n        maxHeight,\n        overflowY: 'auto'\n      }\n    }\n    const ddRef = popperEl.getBoundingClientRect()\n    // ** If there is not space left to open sub menu open it to the right\n    if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n      popperEl.closest('.dropdown').classList.add('openLeft')\n    }\n    data.state.styles.popper = { ...data.state.styles.popper, ...stylesObj }\n  }\n}\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const { item, submenu, isChild } = props\n\n  // ** State\n  const [menuOpen, setMenuOpen] = useState(false)\n  const [popperElement, setPopperElement] = useState(null)\n  const [referenceElement, setReferenceElement] = useState(null)\n\n  // ** Hooks\n  const [isRtl] = useRTL()\n\n  // ** Vars\n  const popperOffsetHorizontal = isRtl ? 16 : -16\n  const popperPlacement = isRtl ? 'bottom-end' : 'bottom-start'\n  const popperPlacementSubMenu = isRtl ? 'left-start' : 'right-start'\n\n  // ** Hooks\n  const { t } = useTranslation()\n  const currentURL = useLocation().pathname\n  const { update, styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: isChild ? popperPlacementSubMenu : popperPlacement,\n    modifiers: [\n      applyHeight,\n      {\n        enabled: true,\n        name: 'offset',\n        options: {\n          offset: isChild ? [-8, 15] : [popperOffsetHorizontal, 5]\n        }\n      }\n    ]\n  })\n\n  const handleMouseEnter = () => {\n    setMenuOpen(true)\n    update()\n  }\n\n  return (\n    <li\n      ref={setReferenceElement}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={() => setMenuOpen(false)}\n      className={classnames('dropdown', {\n        show: menuOpen,\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active': hasActiveChild(item, currentURL)\n      })}\n    >\n      <Link\n        to='/'\n        onClick={e => e.preventDefault()}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n      >\n        {item.icon}\n        <span>{t(item.title)}</span>\n      </Link>\n      <ul\n        ref={setPopperElement}\n        style={{ ...styles.popper }}\n        {...attributes.popper}\n        className={classnames('dropdown-menu', { 'first-level': submenu === false })}\n      >\n        <HorizontalNavMenuItems\n          isChild={true}\n          submenu={true}\n          parentItem={item}\n          menuOpen={menuOpen}\n          items={item.children}\n          setMenuOpen={setMenuOpen}\n        />\n      </ul>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n    if (item.children) {\n      return canViewMenuGroup(item) && <TagName item={item} index={index} key={item.id} {...props} />\n    }\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ menuData }) => {\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems submenu={false} items={menuData} />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\n\nimport Customizer from '@components/customizer'\nimport ScrollToTop from '@components/scrolltop'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useLayout } from '@hooks/useLayout'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\nimport { useRouterTransition } from '@hooks/useRouterTransition'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { navbar, menuData, footer, children, menu } = props\n\n  // ** Hooks\n  const { skin, setSkin } = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const { navbarType, setNavbarType } = useNavbarType()\n  const { footerType, setFooterType } = useFooterType()\n  const { navbarColor, setNavbarColor } = useNavbarColor()\n  const { layout, setLayout, setLastLayout } = useLayout()\n  const { transition, setTransition } = useRouterTransition()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: contentWidth === 'boxed' ? 'floating-nav container-xxl' : 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        container={false}\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? menu({ menuData, routerProps, currentActiveItem }) : <MenuComponent menuData={menuData} />}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          isRtl={isRtl}\n          layout={layout}\n          setSkin={setSkin}\n          setIsRtl={setIsRtl}\n          isHidden={isHidden}\n          setLayout={setLayout}\n          footerType={footerType}\n          navbarType={navbarType}\n          transition={transition}\n          setIsHidden={setIsHidden}\n          themeConfig={themeConfig}\n          navbarColor={navbarColor}\n          contentWidth={contentWidth}\n          setTransition={setTransition}\n          setFooterType={setFooterType}\n          setNavbarType={setNavbarType}\n          setLastLayout={setLastLayout}\n          setNavbarColor={setNavbarColor}\n          setContentWidth={setContentWidth}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? footer : <FooterComponent footerType={footerType} footerClasses={footerClasses} />}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showOffset={300} className='scroll-top d-block'>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","import { Mail, Home } from 'react-feather'\n\nexport default [\n  {\n    id: 'home',\n    title: 'Home',\n    icon: <Home size={20} />,\n    navLink: '/home'\n  },\n  {\n    id: 'alta',\n    title: 'Alta',\n    icon: <Mail size={20} />,\n    navLink: '/alta'\n  },\n  {\n    id: 'Arrancador',\n    title: 'Arrancador',\n    icon: <Mail size={20} />,\n    navLink: '/arrancador'\n  },\n  {\n    id: 'BalanceCero',\n    title: 'BalanceCero',\n    icon: <Mail size={20} />,\n    navLink: '/balanceCero'\n  },\n  {\n    id: 'BalanceN',\n    title: 'BalanceN',\n    icon: <Mail size={20} />,\n    navLink: '/balanceN'\n  },\n  {\n    id: 'Fertilizantes',\n    title: 'Fertilizantes',\n    icon: <Mail size={20} />,\n    navLink: '/fertilizantes'\n  },\n  {\n    id: 'FormulaAbono',\n    title: 'FormulaAbono',\n    icon: <Mail size={20} />,\n    navLink: '/formulaAbono'\n  },\n  {\n    id: 'Rendimiento',\n    title: 'Rendimiento',\n    icon: <Mail size={20} />,\n    navLink: '/rendimiento'\n  }\n]\n","// ** React Imports\nimport { Outlet } from 'react-router-dom'\n\n// ** Core Layout Import\n// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Menu Items Array\nimport navigation from '@src/navigation/horizontal'\n\nconst HorizontalLayout = props => {\n  // const [menuData, setMenuData] = useState([])\n\n  // ** For ServerSide navigation\n  // useEffect(() => {\n  //   axios.get(URL).then(response => setMenuData(response.data))\n  // }, [])\n\n  return (\n    <Layout menuData={navigation} {...props}>\n      <Outlet />\n    </Layout>\n  )\n}\n\nexport default HorizontalLayout\n","// ** React Imports\nimport { Fragment, useEffect, memo } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { children, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n\n  const navbarStore = store.navbar\n  const layoutStored = store.layout.layout\n  const contentWidth = store.layout.contentWidth\n  const transition = store.layout.routerTransition\n  //** Vars\n  const appLayoutCondition =\n    (layoutStored.layout === 'horizontal' && !routeMeta) ||\n    (layoutStored.layout === 'horizontal' && routeMeta && !routeMeta.appLayout)\n  const Tag = appLayoutCondition ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [routeMeta])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [routeMeta ? routeMeta.className : '']: routeMeta && routeMeta.className,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': routeMeta && !routeMeta.appLayout,\n          'content-area-wrapper': routeMeta && routeMeta.appLayout,\n          'container-xxl p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag {...(appLayoutCondition ? { className: 'content-body' } : {})}>{children}</Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(LayoutWrapper)\n","// ** React Imports\nimport { Suspense } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// ** Utils\nimport { getUserData, getHomeRouteForLoggedInUser } from '@utils'\n\nconst PublicRoute = ({ children, route }) => {\n  if (route) {\n    const user = getUserData()\n\n    const restrictedRoute = route.meta && route.meta.restricted\n\n    if (user && restrictedRoute) {\n      return <Navigate to={getHomeRouteForLoggedInUser(user.role)} />\n    }\n  }\n\n  return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","// ** React Imports\r\nimport { Fragment, lazy } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\nimport LayoutWrapper from '@src/@core/layouts/components/layout-wrapper'\r\n\r\n// ** Route Components\r\nimport PublicRoute from '@components/routes/PublicRoute'\r\n\r\n// ** Utils\r\nimport { isObjEmpty } from '@utils'\r\n\r\nconst getLayout = {\r\n  blank: <BlankLayout />,\r\n  vertical: <VerticalLayout />,\r\n  horizontal: <HorizontalLayout />\r\n}\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Vuexy React Admin Template'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\nconst Home = lazy(() => import('../../views/Home'))\r\nconst Login = lazy(() => import('../../views/Login'))\r\nconst Register = lazy(() => import('../../views/Register'))\r\nconst ForgotPassword = lazy(() => import('../../views/ForgotPassword'))\r\nconst Error = lazy(() => import('../../views/Error'))\r\nconst Alta = lazy(() => import('../../components/home/Alta'))\r\nconst Arrancador = lazy(() => import('../../pages/Arrancador'))\r\nconst BalanceCero = lazy(() => import('../../pages/BalanceCero'))\r\nconst BalanceN = lazy(() => import('../../pages/BalanceN'))\r\nconst Fertilizantes = lazy(() => import('../../pages/Fertilizantes'))\r\nconst FormulaAbono = lazy(() => import('../../pages/FormulaAbono'))\r\nconst Rendimiento = lazy(() => import('../../pages/Rendimiento'))\r\n\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  {\r\n    path: '/',\r\n    index: true,\r\n    element: <Navigate replace to={DefaultRoute} />\r\n  },\r\n  {\r\n    path: '/home',\r\n    element: <Home />\r\n  },\r\n  {\r\n    path: '/arrancador',\r\n    element: <Arrancador />\r\n  },\r\n  {\r\n    path: '/Alta',\r\n    element: <Alta />\r\n  },\r\n  {\r\n    path: '/login',\r\n    element: <Login />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/register',\r\n    element: <Register />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    path: '/forgot-password',\r\n    element: <ForgotPassword />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  },\r\n  {\r\n    element: <BalanceCero />,\r\n    path: '/balanceCero'\r\n  },\r\n  {\r\n    element: <BalanceN />,\r\n    path: '/balanceN'\r\n  },\r\n  {\r\n    element: <Fertilizantes />,\r\n    path: '/fertilizantes'\r\n  },\r\n  {\r\n    element: <FormulaAbono />,\r\n    path: '/formulaAbono'\r\n  },\r\n  {\r\n    element: <Rendimiento />,\r\n    path: '/rendimiento'\r\n  },\r\n  {\r\n    path: '/error',\r\n    element: <Error />,\r\n    meta: {\r\n      layout: 'blank'\r\n    }\r\n  }\r\n]\r\n\r\nconst getRouteMeta = route => {\r\n  if (isObjEmpty(route.element.props)) {\r\n    if (route.meta) {\r\n      return { routeMeta: route.meta }\r\n    } else {\r\n      return {}\r\n    }\r\n  }\r\n}\r\n\r\n// ** Return Filtered Array of Routes & Paths\r\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\r\n  const LayoutRoutes = []\r\n\r\n  if (Routes) {\r\n    Routes.filter(route => {\r\n      let isBlank = false\r\n      // ** Checks if Route layout or Default layout matches current layout\r\n      if (\r\n        (route.meta && route.meta.layout && route.meta.layout === layout) ||\r\n        ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\r\n      ) {\r\n        const RouteTag = PublicRoute\r\n\r\n        // ** Check for public or private route\r\n        if (route.meta) {\r\n          route.meta.layout === 'blank' ? (isBlank = true) : (isBlank = false)\r\n        }\r\n        if (route.element) {\r\n          const Wrapper =\r\n            // eslint-disable-next-line multiline-ternary\r\n            isObjEmpty(route.element.props) && isBlank === false\r\n              ? // eslint-disable-next-line multiline-ternary\r\n              LayoutWrapper\r\n              : Fragment\r\n\r\n          route.element = (\r\n            <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\r\n              <RouteTag route={route}>{route.element}</RouteTag>\r\n            </Wrapper>\r\n          )\r\n        }\r\n\r\n        // Push route to LayoutRoutes\r\n        LayoutRoutes.push(route)\r\n      }\r\n      return LayoutRoutes\r\n    })\r\n  }\r\n  return LayoutRoutes\r\n}\r\n\r\nconst getRoutes = layout => {\r\n  const defaultLayout = layout || 'vertical'\r\n  const layouts = ['vertical', 'horizontal', 'blank']\r\n\r\n  const AllRoutes = []\r\n\r\n  layouts.forEach(layoutItem => {\r\n    const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout)\r\n\r\n    AllRoutes.push({\r\n      path: '/',\r\n      element: getLayout[layoutItem] || getLayout[defaultLayout],\r\n      children: LayoutRoutes\r\n    })\r\n  })\r\n  return AllRoutes\r\n}\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes, getRoutes }\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\n\r\n// ** Router Import\r\nimport Router from './router/Router'\r\n\r\n// ** Routes & Default Routes\r\nimport { getRoutes } from './router/routes'\r\n\r\n// ** Hooks Imports\r\nimport { useLayout } from '@hooks/useLayout'\r\n\r\nconst App = () => {\r\n  const [allRoutes, setAllRoutes] = useState([])\r\n\r\n  // ** Hooks\r\n  const { layout } = useLayout()\r\n\r\n  useEffect(() => {\r\n    setAllRoutes(getRoutes(layout))\r\n  }, [layout])\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Router allRoutes={allRoutes} />\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// ** React Imports\nimport { useEffect } from 'react'\n\n// ** Store Imports\nimport { handleSkin } from '@store/layout'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const useSkin = () => {\n  // ** Hooks\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.layout)\n\n  const setSkin = type => {\n    dispatch(handleSkin(type))\n  }\n\n  useEffect(() => {\n    // ** Get Body Tag\n    const element = window.document.body\n\n    // ** Define classnames for skins\n    const classNames = {\n      dark: 'dark-layout',\n      bordered: 'bordered-layout',\n      'semi-dark': 'semi-dark-layout'\n    }\n\n    // ** Remove all classes from Body on mount\n    element.classList.remove(...element.classList)\n\n    // ** If skin is not light add skin class\n    if (store.skin !== 'light') {\n      element.classList.add(classNames[store.skin])\n    }\n  }, [store.skin])\n\n  return { skin: store.skin, setSkin }\n}\n"],"sourceRoot":""}